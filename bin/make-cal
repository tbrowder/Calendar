#!/usr/bin/env raku

use Calendar;
use Calendar::Subs;

if not @*ARGS {
    print qq:to/HERE/;
    Usage: {$*PROGRAM.basename} <mode> [options...]

    [A WIP, modes and options marked with an asterisk work
     Windows version doesn't work. To see PDF calendar generation
     clone the repo, cd to the '/dev' directory, and execute
     program 'make-grid.raku'.]

    Modes:
        pdf     - Creates a PDF version of the calendar
        files   - Creates a sample CSV file for personalization
       *caldat  - Runs the simulated Linux 'cal' program and prints 
                  results to stdout
       *iso     - Lists the languages and ISO code for currently 
                  supported languages

    Options:
       *lang=X  - ISO language code, the default is 'en' (English)
       *y=YYYY  - The default is the next calendar year ({DateTime.new(now).year+1}).
       *m=M[,N] - Month(s) for modes 'pdf' or 'caldat' (1..12).
       *media=X - Paper size: 'Letter' or 'A4' (default: US Letter)
        debug

    HERE
    exit;
}

# modes
my $pdf    = 0;
my $caldat = 0;
my $files  = 0;
my $iso    = 0;

# options
my $debug  = 0;
my $lang   = 'en';
my @months; # undefined at this point
my $year = DateTime.now.year + 1;
my $media = 'Letter';
for @*ARGS {
    when /:i '-'? 'lang=' (\w\w) $/ { 
        $lang = ~$0;
    }
    when /:i '-'? pd/ { ++$pdf    }
    when /:i '-'? c/ { ++$caldat }
    when /:i '-'? d/ { ++$debug  }
    when /:i '-'? f/ { ++$files  }
    when /:i '-'? i/ { ++$iso   }
    when /:i '-'? 'media=' (\S+) $/ { 
        $media = ~$0;
        if $media ~~ /(Letter|A4)/ {
            $media = ~$0;
        }
        else {
            note qq:to/HERE/;
            FATAL: The media type must be 'Letter' or 'A4'.
                   You entered '$media'.
            HERE
            exit;
        }
    }
    when /:i '-'? 'm=' (\S+) $/ { 
        my $s = ~$0;
        #note "DEBUG: entered month(s): $s"; exit;
        my @m = split ',', $s;
        for @m -> $m {
            if not $m.Int {
                note "FATAL: The month must be an Int in the range [1..12].";
                exit;
            }
            if not (0 < $m < 13) {
                note "FATAL: The month must be an Int in the range [1..12].";
                exit;
            }
            @months.push: $m.Int;
        }
    }
    when /:i '-'? 'y=' (\d**4) $/ { 
        $year = +$0;
        #note "DEBUG: entered year: $year"; exit;
        if $year < 2019 {
            note "FATAL: Unable to handle years earlier than 2019.";
            exit;
        }
    }
    default {
        die "FATAL: Unknown arg '$_'"
    }
}

# must have a mode selected
if not ($pdf or $caldat or $files or $iso) {
    die "FATAL: You must select one mode.";
}

if $debug {
    note "DEBUG: media is: $media";
    note "Early exit.";
    exit;
}

if $iso {
   iso;
}

if $pdf {
    #say "The 'pdf' mode is not yet ready.";
    my $o = Calendar.new: :$year, :$lang;
    $o.create-cal :$year;
    exit;

    =begin comment
    my $o = Calendar.new: :$year, :$lang;
    if @months.defined {
        $o.caldata: @months, :$debug;
    }
    else {
        $o.caldata: :$debug;
    }
    =end comment
    exit;
}

if $caldat {
    # now a sub
    caldata @months, :$year, :$lang, :$debug;
    exit;
}

if $files {
    note "Showing an annotated events CSV file.";
    show-events-file :$debug;
    exit; 
}

sub iso is export {
    print q:to/HERE/;
    Following are the ISO codes for languages usable for calendar output:

        Language            | ISO code
        --------------------+---------
        Dutch               | nl
        English             | en
        French              | fr
        German              | de
        Indonesian          | id
        Italian             | it
        Norwegian (BokmÃ¥l)  | nb
        Norwegian (Nynorsk) | nn
        Polish              | pl
        Romanian            | ro
        Russian             | ru
        Spanish             | es
        Ukranian            | uk

    HERE
    exit;
}

