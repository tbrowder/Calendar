=begin pod

=head1 NAME

B<Calendar> - Provides class data for producing calendars

B<Calendar> is a Work in Progress (WIP). Please file an issue if there
are any features you want added. Bug reports (issues) are always
welcome.

=head2 Program C<make-cal>

Execute the program, without arguments, to see details
of its current capabilities.

=head1 SYNOPSIS

=begin code :lang<raku>
use Calendar;
#... use bin program 'make-cal'
=end code

=head1 DESCRIPTION

B<Calendar> Provides class data for producing calendars. It includes a
Raku program to provide a personalized calendar: C<make-cal>.  Note
that calendars may be printed in languages other than English. Through
use of the author's public module B<Date::Names>, the user can select
the ISO two-letter language code and enter it in the C<make-cal>
program. Those codes are repeated here for reference:

=head3 Table 1. Language ISO codes (lower-case)

=begin table
Language            | ISO code
--------------------+---------
Dutch               | nl
English             | en
French              | fr
German              | de
Indonesian          | id
Italian             | it
Norwegian (Bokm√•l)  | nb
Norwegian (Nynorsk) | nn
Polish              | pl
Romanian            | ro
Russian             | ru
Spanish             | es
Ukranian            | uk
=end table

=head2 Features

=head3 Event inputs

Use a CSV formatted file to define events to be loaded. An example
file is written by executing C<make-cal files>.


The file is handled by this author's module 'CSV-Autoclass' whose
default CSV field separator character is the comma. That must be
changed if you want to use commas in this CSV file. You may change it
to 'semicolon' or 'pipe' by one of these methods:

1. setting it in one C<$HOME/.CSV-Autoclass/config.yml> or
       C<$HOME/.Calendar/config.yml> file with this entry:

    csv-autoclass-sepchar: pipe

2. setting environment variables C<CSV_AUTOCLASS_SEPCHAR> or
       C<CALENDAR_AUTOCLASS_SEPCHAR> to the desired character:

    CSV_AUTOCLASS_SEPCHAR=pipe
    CALENDAR_CSV_AUTOCLASS_SEPCHAR=pipe

Those settings are checked in this order, with the first one found
being used:

=item CALENDAR_CSV_AUTOCLASS_SEPCHAR=pipe
=item C<$HOME/.Calendar/config.yml>
=item CSV_AUTOCLASS_SEPCHAR=pipe
=item C<$HOME/.CSV-Autoclass/config.yml>

=head3 CSV format notes

Fields (header line): Month, Day, Year, Event, Name(s), Notes
Field and contents:

=begin item
Month

need at least the first three letters of its name (in English, not
case sensitive)
=end item

=begin item
Day

numerical day of the month
=end item

=begin item
Year

the four digits of a  one-time event (if known)
=end item

=begin item
Event - [code]

    =begin item
    A

    wedding anniversary
    =end item

    =begin item
    B

    birthday
    =end item

    =begin item
    O

    some other notable event, or you may use a short
    set of chars to remind you (see 'Baptism' example
    in the example CSV file)
    =end item
=end item

=begin item
Name(s)

short set of characters; use spaces to enable wrapping to fit a day
square, otherwise they may be chopped off
=end item

=begin item
Notes

not printed on the calendar, but useful for reminders
such as: Joe was 32 in 2022 so his birth year was 1990
=end item

=head2 Customization

Features and options may be set in the user's configuration file
at C<$HOME/.Calendar/config.yml>. The author's file looks like
this (with some exeptions):

=begin code
# key: value
lang: en

# for the Calendar events CSV file
# use a 'pipe' for SEPCHAR
csv-autoclass-sepchar: '|'
# the CSV event file location (example)
calendar-event-file: "$HOME/.Calendar/calendar-events.csv"

# location: City Hall, Gulf Breeze, Florida, US
lat: 30.486092
lon: -86.43761
seasons: yes
dst: yes
holidays-us: yes
holidays-misc: yes
sunrise-set: no
moon-phase: no
=end code

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

E<0x00a9> 2020-2024 Tom Browder

This library is free software; you may redistribute it or modify
it under the Artistic License 2.0.

=end pod
